{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export default function pixabayApiFunction(searchWord) {\n    const searchParams = new URLSearchParams({\n        key: '44228657-622a5a522e8285bbc9d7fdb17',\n        q: `${searchWord}`,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true\n    });\n    return fetch(`https://pixabay.com/api/?${searchParams}`)\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            };\n            return response.json();\n        });\n}","export default function renderElements(elements) {\n    const strHTML = [];\n    elements.forEach(element => {\n        strHTML.push(`\n            <li class=\"main-item\">\n                <a class=\"main-link\" href=\"${element.largeImageURL}\" onclick=\"return false;\">\n                  <img class=\"main-image\" src=\"${element.webformatURL}\" alt=\"${element.tags}\" />\n                  <div class=\"main-characteristics\">\n                    <div class=\"main-characteristics-element\">\n                      <p class=\"main-characteristics-type\">Likes</p>\n                      <p class=\"main-characteristics-value\">${element.likes}</p>\n                    </div>\n                    <div class=\"main-characteristics-element\">\n                      <p class=\"main-characteristics-type\">Views</p>\n                      <p class=\"main-characteristics-value\">${element.views}</p>\n                    </div>\n                    <div class=\"main-characteristics-element\">\n                      <p class=\"main-characteristics-type\">Comments</p>\n                      <p class=\"main-characteristics-value\">${element.comments}</p>\n                    </div>\n                    <div class=\"main-characteristics-element\">\n                      <p class=\"main-characteristics-type\">Downloads</p>\n                      <p class=\"main-characteristics-value\">${element.downloads}</p>\n                    </div>\n                </div>\n              </a>\n            </li>\n            `);\n    });\n    return strHTML;\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport pixabayApiFunction from \"/js/pixabay-api\";\nimport renderElements from \"/js/render-functions\";\n\n\nconst openSearchBtn = document.querySelector('.open-search');\nconst mainForm = document.querySelector('.main-form');\nconst mainInput = document.querySelector('.main-form-input');\nconst mainList = document.querySelector('.main-list')\n\nlet inputValue;\n\nfunction toggleIsOpen() { mainForm.classList.toggle('isOpen'); mainForm.reset(); }\n\nopenSearchBtn.addEventListener(\"click\", () => { toggleIsOpen(); mainInput.focus(); });\n\ndocument.addEventListener('keyup', (event) => {\n    if (mainForm.classList.contains('isOpen')) if (event.key === 'Escape') toggleIsOpen();\n});\n\nmainForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    if (!mainInput.value) {\n        iziToast.warning({\n            message: 'The input field cannot be empty!',\n            position: \"topRight\",\n            theme: 'dark',\n            backgroundColor: '#ef4040'\n        });\n        return;\n    };\n    inputValue = mainInput.value;\n    toggleIsOpen();\n\n    pixabayApiFunction(inputValue)\n        .then(post => {\n            if (post.hits.length == 0) {\n                iziToast.warning({\n                    message: 'Sorry, there are no images matching your search query. Please try again!',\n                    position: \"topRight\",\n                    theme: 'dark',\n                    backgroundColor: '#ef4040'\n                });\n                throw new Error('Cannot found');\n            };\n            console.log(post.hits);\n            mainList.insertAdjacentHTML(\"beforeend\", renderElements(post.hits).join(\"\"));\n            var lightbox = new SimpleLightbox('.main-list a', { captionsData: 'alt' });\n            lightbox.refresh();\n        })\n        .catch(error => console.log(\"ERROR:\", error));\n});"],"names":["pixabayApiFunction","searchWord","searchParams","response","renderElements","elements","strHTML","element","openSearchBtn","mainForm","mainInput","mainList","inputValue","toggleIsOpen","event","iziToast","post","lightbox","SimpleLightbox","error"],"mappings":"6vBAAe,SAASA,EAAmBC,EAAY,CACnD,MAAMC,EAAe,IAAI,gBAAgB,CACrC,IAAK,qCACL,EAAG,GAAGD,CAAU,GAChB,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EACD,OAAO,MAAM,4BAA4BC,CAAY,EAAE,EAClD,KAAMC,GAAa,CAChB,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MAC5B,CAAS,CACT,CCfe,SAASC,EAAeC,EAAU,CAC7C,MAAMC,EAAU,CAAA,EAChB,OAAAD,EAAS,QAAQE,GAAW,CACxBD,EAAQ,KAAK;AAAA;AAAA,6CAEwBC,EAAQ,aAAa;AAAA,iDACjBA,EAAQ,YAAY,UAAUA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA,8DAI7BA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,8DAIbA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,8DAIbA,EAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA,8DAIhBA,EAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,aAKlE,CACb,CAAK,EACMD,CACX,CCrBA,MAAME,EAAgB,SAAS,cAAc,cAAc,EACrDC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,YAAY,EAEpD,IAAIC,EAEJ,SAASC,GAAe,CAAEJ,EAAS,UAAU,OAAO,QAAQ,EAAGA,EAAS,MAAK,CAAK,CAElFD,EAAc,iBAAiB,QAAS,IAAM,CAAEK,EAAY,EAAIH,EAAU,OAAQ,CAAE,EAEpF,SAAS,iBAAiB,QAAUI,GAAU,CACtCL,EAAS,UAAU,SAAS,QAAQ,GAAOK,EAAM,MAAQ,UAAUD,GAC3E,CAAC,EAEDJ,EAAS,iBAAiB,SAAWK,GAAU,CAE3C,GADAA,EAAM,eAAc,EAChB,CAACJ,EAAU,MAAO,CAClBK,EAAS,QAAQ,CACb,QAAS,mCACT,SAAU,WACV,MAAO,OACP,gBAAiB,SAC7B,CAAS,EACD,MACR,CACIH,EAAaF,EAAU,MACvBG,IAEAb,EAAmBY,CAAU,EACxB,KAAKI,GAAQ,CACV,GAAIA,EAAK,KAAK,QAAU,EACpB,MAAAD,EAAS,QAAQ,CACb,QAAS,2EACT,SAAU,WACV,MAAO,OACP,gBAAiB,SACrC,CAAiB,EACK,IAAI,MAAM,cAAc,EAElC,QAAQ,IAAIC,EAAK,IAAI,EACrBL,EAAS,mBAAmB,YAAaP,EAAeY,EAAK,IAAI,EAAE,KAAK,EAAE,CAAC,EAC3E,IAAIC,EAAW,IAAIC,EAAe,eAAgB,CAAE,aAAc,KAAK,CAAE,EACzED,EAAS,QAAO,CAC5B,CAAS,EACA,MAAME,GAAS,QAAQ,IAAI,SAAUA,CAAK,CAAC,CACpD,CAAC"}